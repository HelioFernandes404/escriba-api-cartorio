{
	"info": {
		"_postman_id": "7c2ee420-f849-4364-9e71-f1a3edf9070a",
		"name": "cartórios",
		"description": "# 🚀 Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## 🔖 **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Tests\" tab**\n\nTests help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/b5f280a7-4b09-48ec-857f-0a7ed99d7ef8/U2NyZWVuc2hvdCAyMDIzLTAzLTI3IGF0IDkuNDcuMjggUE0ucG5n\">\n\n## 💪 Pro tips\n\n- Use folders to group related requests and organize the collection.\n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) in \"Tests\" to verify if the API works as expected and execute workflows.\n    \n\n## 💡Related templates\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30980583"
	},
	"item": [
		{
			"name": "situações do cartório",
			"item": [
				{
					"name": "GET PAGINAÇÃO",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:9564/situacaos",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9564",
							"path": [
								"situacaos"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "GET ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:9564/situacaos/SIT_ATIVO",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9564",
							"path": [
								"situacaos",
								"SIT_ATIVO"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "POST",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"SIT_VAZIO\",\r\n    \"nome\": \"vazio\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:9564/situacaos",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9564",
							"path": [
								"situacaos"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST VALIDAÇÃO",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"SIT_ATIVO\",\r\n    \"nome\": \"Ativo\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:9564/situacaos",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9564",
							"path": [
								"situacaos"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"SIT_ATIVO\",\r\n    \"nome\": \"novo Ativo\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:9564/situacaos/SIT_ATIVO",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9564",
							"path": [
								"situacaos",
								"SIT_ATIVO"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT VALIDAÇÃO",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"SIT_ATIVO\",\r\n    \"nome\": \"Ativo\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:9564/situacaos/SIT_ATIVO",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9564",
							"path": [
								"situacaos",
								"SIT_ATIVO"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:9564/situacaos/SIT_VAZIO",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9564",
							"path": [
								"situacaos",
								"SIT_VAZIO"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "atribuições do cartório",
			"item": [
				{
					"name": "GET PAGINAÇÃO",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:9564/atribuicoes",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9564",
							"path": [
								"atribuicoes"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "GET ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:9564/atribuicoes/ATR_REGISTRO",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9564",
							"path": [
								"atribuicoes",
								"ATR_REGISTRO"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "POST",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n \"id\": \"nova atribuicoes\",\r\n \"nome\": \"nova atribuicoes\",\r\n \"situacao\": true\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:9564/atribuicoes",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9564",
							"path": [
								"atribuicoes"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST VALIDAÇÃO",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n \"id\": \"nova atribuicoes\",\r\n \"nome\": \"nova atribuicoes\",\r\n \"situacao\": true\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:9564/atribuicoes",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9564",
							"path": [
								"atribuicoes"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n \"id\": \"v1\",\r\n \"nome\": \"v1\",\r\n \"situacao\": true\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:9564/atribuicoes/v1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9564",
							"path": [
								"atribuicoes",
								"v1"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n \"id\": \"ATR12345\",\r\n \"nome\": \"Atribuição de Tarefa\",\r\n \"situacao\": true\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:9564/atribuicoes/ATR_NOTARIA",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9564",
							"path": [
								"atribuicoes",
								"ATR_NOTARIA"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "cartórios",
			"item": [
				{
					"name": "GET PAGINAÇÃO",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:9564/cartorios",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9564",
							"path": [
								"cartorios"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "GET ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:9564/cartorios/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9564",
							"path": [
								"cartorios",
								"1"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "POST",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nome\": \"Cartório new\",\r\n    \"observacao\": \"Oferece serviços de registro, notarização e emissão de certidões.\",\r\n    \"situacao\": {\r\n        \"id\": \"SIT_ATIVO\"\r\n    },\r\n    \"atribuicoes\": [\r\n        {\r\n            \"id\": \"ATR_REGISTRO\"\r\n        },\r\n        {\r\n            \"id\": \"ATR_NOTARIA\"\r\n        },\r\n        {\r\n            \"id\": \"ATR_CERTIDOES\"\r\n        },\r\n        {\r\n            \"id\": \"ATR_PROCESSOS\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:9564/cartorios",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9564",
							"path": [
								"cartorios"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST VALIDAÇÃO",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nome\": \"Cartório new\",\r\n    \"observacao\": \"Oferece serviços de registro, notarização e emissão de certidões.\",\r\n    \"situacao\": {\r\n        \"id\": \"SIT_ATIVO\"\r\n    },\r\n    \"atribuicoes\": [\r\n        {\r\n            \"id\": \"ATR_REGISTRO\"\r\n        },\r\n        {\r\n            \"id\": \"ATR_NOTARIA\"\r\n        },\r\n        {\r\n            \"id\": \"ATR_CERTIDOES\"\r\n        },\r\n        {\r\n            \"id\": \"ATR_PROCESSOS\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:9564/cartorios",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9564",
							"path": [
								"cartorios"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nome\": \"Cartório NEW PUT\",\r\n    \"observacao\": \"Oferece serviços de registro, notarização e emissão de certidões.\",\r\n    \"situacao\": {\r\n        \"id\": \"SIT_ATIVO\"\r\n    },\r\n    \"atribuicoes\": [\r\n        {\r\n            \"id\": \"ATR_REGISTRO\"\r\n        },\r\n        {\r\n            \"id\": \"ATR_NOTARIA\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:9564/cartorios/3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9564",
							"path": [
								"cartorios",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n \"id\": \"ATR12345\",\r\n \"nome\": \"Atribuição de Tarefa\",\r\n \"situacao\": true\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:9564/cartorios/3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9564",
							"path": [
								"cartorios",
								"3"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}